name: Ingest Obsidian Notes

on:
  push:
    paths:
      - '**/*.md'
  workflow_dispatch:

jobs:
  ingest:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout the repo so we can see what files changed
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Grab the list of changed .md files
      - name: Find changed markdown files
        id: find_notes
        run: |
          raw=$(git diff --name-only ${{ github.sha }} ${{ github.sha }}~1 | grep '\.md$' || true)
          joined=$(echo "$raw" | paste -sd '|:|' -)
          echo "files=$joined" >> $GITHUB_OUTPUT

      # 3Ô∏è‚É£ For each changed file whose frontmatter has ingest: true, POST it to Supabase
      - name: Filter frontmatter & call Supabase
  if: steps.find_notes.outputs.files != ''
  env:
    SUPABASE_URL: https://sffsnpwqifdiwcepotdb.supabase.co/functions/v1
    SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
    SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
  run: |
    set -euxo pipefail

    # Install yq v4 & jq
    sudo wget -qO /usr/local/bin/yq \
      https://github.com/mikefarah/yq/releases/download/v4.34.1/yq_linux_amd64
    sudo chmod +x /usr/local/bin/yq
    sudo apt-get update && sudo apt-get install -y jq

    # Rebuild files array
    IFS='|:|' read -r -a files <<< "${{ steps.find_notes.outputs.files }}"
    for file in "${files[@]}"; do
      [[ -f "$file" ]] || continue

      echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
      echo "üîç Processing file: $file"
      echo "Front-matter block:"
      sed -n '1,/^---$/p; /^---$/q' "$file" \
        | sed '1d;$d' 

      ingest=$(yq e '.ingest' "$file")
      echo "yq .ingest ‚Üí $ingest"

      if [[ "$ingest" != "true" ]]; then
        echo "‚ö†Ô∏è  Skipping $file; ingest flag is not true"
        continue
      fi

      echo "‚úÖ ingest: true ‚Üí posting to Supabase"
      tp=$(yq e '.type'  "$file"); echo "  type: $tp"
      dt=$(yq e '.date'  "$file"); echo "  date: $dt"
      tg=$(yq e '.tags | @json' "$file"); echo "  tags: $tg"
      ct=$(awk 'BEGIN{p=0}
               /^---$/ { if(p==0){p=1; next} else exit }
               p==1 && !/^---$/ { print }
              ' "$file" | jq -Rs .)
      echo "  content preview: ${ct:0:80}‚Ä¶"

      payload=$(
        jq -n \
          --arg persona_id "48245528-5e58-4631-9755-cddd1a40a4a6" \
          --arg doc_path   "$file" \
          --arg type       "$tp" \
          --arg date       "$dt" \
          --argjson tags   "$tg" \
          --arg content    "$ct" \
          '{ persona_id, doc_path, type, date, tags, content }'
      )
      echo "  payload built"

      curl -s -w "\n‚á¢ HTTP_CODE=%{http_code}\n" \
        -X POST "$SUPABASE_URL/ingest" \
        -H "apikey: $SUPABASE_SERVICE_ROLE_KEY" \
        -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
        -H "Content-Type: application/json" \
        -d "$payload"
    done
