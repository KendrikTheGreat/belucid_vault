name: Ingest FoundersNotes

on:
  push:
    paths:
      - 'FoundersNotes/**/*.md'
  workflow_dispatch:

jobs:
  ingest_foundersnotes:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Pull down your vault
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2️⃣ Find changed .md under FoundersNotes
      - name: Find changed .md under FoundersNotes
        id: find_notes
        run: |
          git diff --name-only ${{ github.sha }} ${{ github.sha }}~1 \
            | grep '^FoundersNotes/.*\.md$' > found.txt || true
          echo "files=$(<found.txt)" >> $GITHUB_OUTPUT

      # 3️⃣ Filter frontmatter & call Supabase
      - name: Filter frontmatter & call Supabase
        if: steps.find_notes.outputs.files != ''
        env:
          SUPABASE_URL:            ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY:       ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          set -euxo pipefail

          # 1) Install yq (v4) & jq
          sudo wget -qO /usr/local/bin/yq \
            https://github.com/mikefarah/yq/releases/download/v4.34.1/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          sudo apt-get update && sudo apt-get install -y jq

          # 2) Rehydrate our files array
          mapfile -t files <<<"${{ steps.find_notes.outputs.files }}"

          for file in "${files[@]}"; do
            [[ -f "$file" ]] || continue

            # 3) Extract ONLY the front-matter block
            front=$(sed -n '1,/^---$/p; /^---$/q' "$file" | sed '1d;$d')

            # 4) Parse the ingest flag from that front-matter
            ingest=$(printf '%s\n' "$front" | yq e '.ingest' -)
            [[ "$ingest" == "true" ]] || continue
            echo "→ ingesting $file …"

            # 5) Pull out the other front-matter fields
            pid=$(printf '%s\n' "$front" | yq e '.persona_id' -)
            dt=$(printf '%s\n' "$front" | yq e '.date' -)
            tg=$(printf '%s\n' "$front" | yq e '.tags | @json' -)
            metadata=$(printf '%s\n' "$front" | yq e '.metadata // {} | tojson' -)

            # 6) Grab the body (everything after the second '---')
            content=$(awk 'BEGIN{p=0}
                            /^---$/ { p++; next }
                            p==2   { print }
                          ' "$file" | jq -Rs .)

            # 7) Build your JSON payload
            payload=$(
              jq -n \
                --arg p_persona_id "$pid" \
                --arg p_note_date  "$dt" \
                --argjson p_tags   "$tg" \
                --argjson p_metadata "$metadata" \
                --arg content      "$content" \
                '{ p_persona_id, p_note_date, p_content: $content, p_tags, p_metadata }'
            )

            # 8) Fire off your Edge Function
            curl -s -w "\n→ HTTP_CODE=%{http_code}\n" \
              -X POST "$SUPABASE_URL/upsert_foundersnote_with_state" \
              -H "apikey: $SUPABASE_SERVICE_ROLE_KEY" \
              -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
              -H "Content-Type: application/json" \
              -d "$payload"
          done
